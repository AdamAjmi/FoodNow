

<div ng-app="searchApp" ng-controller="searchCtrl">

  {{location}}


  <div class="container">
    <h2>Food Now</h2>
    <div class="form-group">
      <label for="rangeInput">Range (km):</label>
      <input type="number" min="1" id="rangeInput" class="form-control" ng-model="query.range">
      <br>
      <label for="categorySelect">Select A Category:</label>
      <select class="form-control" id="categorySelect" ng-model="query.category">
        <option ng-repeat="category in categories" value={{ category.categories.id }}>{{ category.categories.name }}</option>
      </select>
      <br>
      <label for="cuisinesSelect">Select Cuisines:</label>
      <select multiple class="form-control" id="cuisinesSelect" title="use Ctrl to select more than one" ng-model="query.cuisines">
        <option ng-repeat="cuisine in cuisines" value={{ cuisine.cuisine.cuisine_id }}>{{ cuisine.cuisine.cuisine_name }}</option>
      </select>
    <label>Select your location:</label>
    </div>
      <script
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDB2SxMScx_UhuA8A_tudtOo1Onu-1H-VU&callback=initMap">
      </script>
    <div id="googleMap" style="width:480px;height:360px;">

    </div>
    <a ng-click="searchResturants()" class="btn btn-default pull-right">Search</a>
  </div>


</div>
<script>
  var app = angular.module('searchApp', []);
  app.controller('searchCtrl', function($scope, $http)
  {

    $scope.getCategories = function () {
      $http.get("/restaurant/categories").then(function mySucces(response) {
        $scope.categories = response.data.categories;
        console.log(response.data.categories);
      }, function myError(response) {
        $scope.categoriesError = response.statusText;
      });
    };


    $scope.getCuisines = function () {
      $http.get("/restaurant/cuisines/"+$scope.query.lat+"/"+$scope.query.lon).then(function mySucces(response) {
        $scope.cuisines = response.data.cuisines;
        console.log(response.data.cuisines);
      }, function myError(response) {
        $scope.cuisinesError = response.statusText;
      });
    };


    $scope.searchResturants = function () {
      $http.get("/restaurant/restaurants/"+$scope.query.lat+"/"+$scope.query.lon+"/"+$scope.query.range).then(function mySucces(response) {
        $scope.restaurants = response.data;
        console.log(response.data)
      }, function myError(response) {
        $scope.restaurantsError = response.statusText;
      });
    };

    $scope.query = {'lat':40.732013,'lon':-73.996155,'range':50,'category':false,'cuisines':false}
    $scope.getCategories()
    $scope.getCuisines()

    $scope.getLocation = function() {Â 
      $http.get('http://freegeoip.net/json/').then(function httpHandling(response)
      {
        //TODO: Do something with the location data.
        //Handle the data however you need.
        $scope.location = response.data;
      });
    }

    $scope.getLocation();


  });




</script>

<script>
  //Function that creates the map prop in the user interface
  function initialize() {
    //console.log("creating map prop");
      var mapProp = {
      center:new google.maps.LatLng(59.8,10.5),
      zoom:9,
      mapTypeId: 'roadmap'
    };
    //console.log("prop created");
      var gmap = new google.maps.Map(document.getElementById("googleMap"), mapProp);
      //Creates an empty global variable which we define in function placeMarkerAndPanTo
      var marker;

      //Adds a listener for clicks on the map and runs function if a click registers
      gmap.addListener('click', function(e) {
          placeMarkerAndPanTo(e.latLng, gmap);
      });

      //Function that places a marker where user has clicked, or moves current marker if marker already exists
      function placeMarkerAndPanTo(latLng, gmap) {
        //If a marker object already exists...
        if (marker) {
            //...move marker to new position.
            marker.setPosition(latLng);
          console.log("Marker was moved to " + latLng);
        }
        //Assuming that there is no marker object...
        else {
          //...we create a new marker.
          marker = new google.maps.Marker({
            position: latLng,
            map: gmap
          });
          console.log("Position of new marker is: " + latLng);


        }
        //Pans the map to the clicked coordinates.
        gmap.panTo(latLng);

        //Splits latLng into two variables to be compatible with Zomato service
        var latitude = marker.position.lat();
        var longitude = marker.position.lng();

        console.log("Latitude: " + latitude)
        console.log("Longitude: " + longitude)


        //TODO: Pass latLng to Angular so that it can be used for API query to Zomato
      }
  } //end of initialize function
  //When the window has finished loading, execute function named initialize
  google.maps.event.addDomListener(window, 'load', initialize);

</script>
