

<div ng-app="searchApp" ng-controller="searchCtrl">
  <div class="container">

    <!--{{query.cuisines}}

    {{query.category}}-->

    <h2>Food Now</h2>
    <div class="form-group">
      <label for="rangeInput">Range (km):</label>
      <input type="number" min="1" id="rangeInput" class="form-control" ng-model="query.range">
      <br>
      <label for="categorySelect">Select A Category:</label>
      <select class="form-control" id="categorySelect" ng-model="query.category">
        <option ng-repeat="category in categories" value={{category.categories.id}}>{{ category.categories.name }}</option>
      </select>
      <br>
      <label for="cuisinesSelect">Select Cuisines:</label>
      <select multiple class="form-control" id="cuisinesSelect" title="use Ctrl to select more than one" ng-model="query.cuisines" size="15">
        <option ng-repeat="cuisine in cuisines" value={{cuisine.cuisine.cuisine_id}}>{{ cuisine.cuisine.cuisine_name }}</option>
      </select>
      <div style="margin-top:10px;">
        <a ng-click="search()" class="btn btn-default">Search</a> or <label>Select your location:</label>
      </div>
      </div>
        <script
          src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDB2SxMScx_UhuA8A_tudtOo1Onu-1H-VU&callback=initMap">
        </script>
      <div id="googleMap" style="width:100%;height:360px;">

    </div>
  </div>
</div>
<script>
  var app = angular.module('searchApp', []);
  app.controller('searchCtrl', function($scope, $http)
  {

    $scope.getCategories = function () {
      $http.get("/restaurant/categories").then(function mySucces(response) {
        $scope.categories = response.data.categories;
        console.log(response.data.categories);
      }, function myError(response) {
        $scope.categoriesError = response.statusText;
      });
    };


    $scope.getCuisines = function () {
      $http.get("/restaurant/cuisines/"+$scope.query.lat+"/"+$scope.query.lon).then(function mySucces(response) {
        $scope.cuisines = response.data.cuisines;
        console.log(response.data.cuisines);
      }, function myError(response) {
        $scope.cuisinesError = response.statusText;
      });
    };


    $scope.searchResturants = function () {
      $http.get("/restaurant/restaurants/"+$scope.query.lat+"/"+$scope.query.lon+"/"+$scope.query.range+"/"+$scope.query.category+"/"+$scope.query.cuisines.join(",")).then(function mySucces(response) {
        $scope.restaurants = response.data;
        console.log(response.data)
      }, function myError(response) {
        $scope.restaurantsError = response.statusText;
      });
    };

    $scope.setMapPosition = function(restaurant) {

      //var infoWindow = new google.maps.InfoWindow();
      //var bounds = new google.maps.LatLngBounds();
      var marker = new google.maps.Marker({
        position: new google.maps.LatLng(restaurant.location.latitude, restaurant.location.longitude),
        map: $scope.gmap,
        title: restaurant.name
      });

      $scope.bounds.extend(marker.position);
        //Adds a click event to the current marker
        //console.log("We made it boys");
        google.maps.event.addListener(marker, "click", function (e) {
          //Closes any pre-exsisting infowindows.
          if ($scope.infoWindow) {
            $scope.infoWindow.close();
          }
          //Sets the content of the infoWindow to display when clicked upon
          $scope.infoWindow.setContent(
            '<h1 id="firstHeading" class="firstHeading" >' +
            '<a href="' + restaurant.url + '">' +
            restaurant.name +
            '</h1>' + '</a>' +
            '<div id="bodyContent" style="white-space: pre">' +  '<b>Address: </b>' + restaurant.location.address + '<br>' +
            '<b>Cuisines: </b>' + restaurant.cuisines + '<br>' +
            '<b>Rating: </b>' + restaurant.user_rating.aggregate_rating + '/5 based on ' + restaurant.user_rating.votes + ' votes' +
            '</div>'
            )
          $scope.infoWindow.open($scope.gmap, marker)
        });
      $scope.gmap.fitBounds($scope.bounds);
    };

    $scope.search = function()
    {
      $http.get("/restaurant/restaurants/"+$scope.query.lat+"/"+$scope.query.lon+"/"+ $scope.query.range+"/"+$scope.query.category+"/"+$scope.query.cuisines).then(function mySucces(response) {


          if(typeof response.data.restaurants != 'undefined')
          {
            console.log(response.data);
              /*
              var mapProp = {
              center:new google.maps.LatLng($scope.query.lat, $scope.query.lon),
              zoom:9,
              mapTypeId: 'roadmap'
            };
            //console.log("prop created");
            $scope.gmap = new google.maps.Map(document.getElementById("googleMap"), mapProp);
*/
               $scope.initialize($scope.query.lat, $scope.query.lon);


            for(var x = 0; x < response.data.restaurants.length; x++)
            {
              //var restaurant = response.data.restaurants[x].restaurant;

              $scope.setMapPosition(response.data.restaurants[x].restaurant);

              //console.log(response.data.restaurants[x].restaurant);
              //console.log('only name?');
              //console.log(response.data.restaurants[x].restaurant.name);
            }
          }
          else
          {
              //TODO: do something when nothing is found. ?
          }

      }, function myError(response) {
        $scope.restaurantsError = response.statusText;
      });
    }



    $scope.initialize = function(lat, lng)
    {
        //TODO: Do something with the location data.
        //Handle the data however you need.
        //$scope.location = response.data;

        //console.log("creating map prop");
        var mapProp = {
          center:new google.maps.LatLng(lat, lng),
          zoom:9,
          mapTypeId: 'roadmap'
        };
        //console.log("prop created");
        $scope.gmap = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        //Creates a global variable for info windows to enable only one active infoWindow at a time.
        $scope.infoWindow = new google.maps.InfoWindow();
        //whatever dude
        $scope.bounds = new google.maps.LatLngBounds();
        //Creates an empty global variable which we define in function placeMarkerAndPanTo
        var marker;

        //Adds a listener for clicks on the map and runs function if a click registers
        $scope.gmap.addListener('click', function(e) {
          placeMarkerAndPanTo(e.latLng, $scope.gmap);
        });

        //Function that places a marker where user has clicked, or moves current marker if marker already exists
        function placeMarkerAndPanTo(latLng, gmap) {
          //If a marker object already exists...
          if (marker) {
            //...move marker to new position.
            marker.setPosition(latLng);
            console.log("Marker was moved to " + latLng);
          }
          //Assuming that there is no marker object...
          else {
            //...we create a new marker.
            var image = {
              url: "http://freevector.co/wp-content/uploads/2009/05/9769-burger-marker1.png",
              scaledSize: new google.maps.Size(75, 75),
            };
            marker = new google.maps.Marker({
              position: latLng,
              map: gmap,
              icon: image

            });
            console.log("Position of new marker is: " + latLng);


          }
          //Pans the map to the clicked coordinates.
          gmap.panTo(latLng);

          //Splits latLng into two variables to be compatible with Zomato service
          $scope.query.lat = marker.position.lat();
          $scope.query.lon = marker.position.lng();


          console.log("Latitude: " + $scope.query.lat);
          console.log("Longitude: " + $scope.query.lon);


          //TODO: Pass latLng to Angular so that it can be used for API query to Zomato
        }//end of initialize function
        //When the window has finished loading, execute function named initialize



    }

    $scope.getLocation = function() {
      $http.get('https://freegeoip.net/json/').then(function httpHandling(response)
      {
        //TODO: Do something with the location data.
        //Handle the data however you need.
        $scope.location = response.data;
        $scope.query.lat = response.data.latitude
        $scope.query.lon = response.data.longitude;
        //$scope.query.range = 10
        $scope.getCategories();
        $scope.getCuisines();
        $scope.initialize($scope.query.lat, $scope.query.lon);
        //console.log(response.data.latitude);
        //console.log(response.data.longitude);

        //$http.get('http://freegeoip.net/json/').then(function httpHandling(response)

      });
    }

    //initialize.
    $scope.query = {'lat': '','lon':'','range':10,'category':false,'cuisines':false}

    $scope.getLocation();

    //$scope.initialize();



  });
  
</script>
